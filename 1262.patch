From ff211ad097fff3655a52f2e0f56d9254427c760d Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Sat, 9 May 2020 19:39:08 +0200
Subject: [PATCH 1/9] implement yay -Pp option

---
 cmd.go           |   5 +-
 completions/bash |   2 +-
 completions/fish |   2 +
 completions/zsh  |   1 +
 doc/yay.8        |   4 ++
 print.go         |  51 +++++++++++++++++
 query.go         | 144 +++++++++++++++++++++++++++++++++++++++++++++++
 7 files changed, 207 insertions(+), 2 deletions(-)

diff --git a/cmd.go b/cmd.go
index 6a627e58..8b1154e4 100644
--- a/cmd.go
+++ b/cmd.go
@@ -33,7 +33,7 @@ operations:
 
 New operations:
     yay {-Y --yay}         [options] [package(s)]
-    yay {-P --show}        [options]
+    yay {-P --show}        [options] [package(s)]
     yay {-G --getpkgbuild} [package(s)]
 
 If no arguments are provided 'yay -Syu' will be performed
@@ -126,6 +126,7 @@ show specific options:
     -g --currentconfig    Print current yay configuration
     -s --stats            Display system package statistics
     -w --news             Print arch news
+    -p --pkgbuild         Print pkgbuild of packages
 
 yay specific options:
     -c --clean            Remove unneeded dependencies
@@ -212,6 +213,8 @@ func handlePrint() (err error) {
 		err = completion.Show(alpmHandle, config.AURURL, cacheHome, config.CompletionInterval, false)
 	case cmdArgs.existsArg("s", "stats"):
 		err = localStatistics()
+	case cmdArgs.existsArg("p", "pkgbuild"):
+		err = printPkgbuilds(cmdArgs.targets)
 	default:
 		err = nil
 	}
diff --git a/completions/bash b/completions/bash
index 7443d7bc..7cdda186 100644
--- a/completions/bash
+++ b/completions/bash
@@ -79,7 +79,7 @@ _yay() {
           searchby batchinstall nobatchinstall'
     'b d h q r v')
   yays=('clean gendb' 'c')
-  show=('complete defaultconfig currentconfig stats  news' 'c d g s w')
+  show=('complete defaultconfig currentconfig stats  news pkgbuild' 'c d g s w p')
   getpkgbuild=('force' 'f')
 
   for o in 'D database' 'F files' 'Q query' 'R remove' 'S sync' 'U upgrade' 'Y yays' 'P show' 'G getpkgbuild'; do
diff --git a/completions/fish b/completions/fish
index cad9588b..80b5c2ad 100644
--- a/completions/fish
+++ b/completions/fish
@@ -169,6 +169,8 @@ complete -c $progname -n "$show" -s d -l defaultconfig -d 'Print default yay con
 complete -c $progname -n "$show" -s g -l currentconfig -d 'Print current yay configuration' -f
 complete -c $progname -n "$show" -s s -l stats -d 'Display system package statistics' -f
 complete -c $progname -n "$show" -s w -l news -d 'Print arch news' -f
+complete -c $progname -n "$show" -s p -l pkgbuild -d 'Print pkgbuild of packages' -f
+complete -c $progname -n "$pkgbuild" -xa "$listall"
 complete -c $progname -n "$show" -s q -l quiet -d 'Do not print news description' -f
 
 # Getpkgbuild options
diff --git a/completions/zsh b/completions/zsh
index 188da717..c2016835 100644
--- a/completions/zsh
+++ b/completions/zsh
@@ -171,6 +171,7 @@ _pacman_opts_print_modifiers=(
 		{-s,--stats}'[Display system package statistics]'
 		{-u,--upgrades}'[Print update list]'
 		{-w,--news}'[Print arch news]'
+		{-p,--pkgbuild}'[Print arch news]'
 )
 # options for passing to _arguments: options for --remove command
 _pacman_opts_remove=(
diff --git a/doc/yay.8 b/doc/yay.8
index 50bd0719..437e70a5 100644
--- a/doc/yay.8
+++ b/doc/yay.8
@@ -124,6 +124,10 @@ Print new news from the Archlinux homepage. News is considered new if it is
 newer than the build date of all native packages. Pass this twice to show all
 available news.
 
+.TP
+.B \-p, \-\-pkgbuild
+Prints the PKGBUILD of the given packages to stdout.
+
 .TP
 .B \-q, \-\-quiet
 Only show titles when printing news.
diff --git a/print.go b/print.go
index 361ed117..20518f6c 100644
--- a/print.go
+++ b/print.go
@@ -15,6 +15,7 @@ import (
 	rpc "github.com/mikkeloscar/aur"
 
 	"github.com/Jguer/yay/v9/pkg/intrange"
+	"github.com/Jguer/yay/v9/pkg/multierror"
 	"github.com/Jguer/yay/v9/pkg/stringset"
 )
 
@@ -672,3 +673,53 @@ func providerMenu(dep string, providers providers) *rpc.Pkg {
 
 	return nil
 }
+
+func printPkgbuilds(pkgS []string) error {
+	var pkgbuilds []string
+	var local_pkgbuilds []string
+	missing := false
+	pkgS = removeInvalidTargets(pkgS)
+	aurS, repoS, err := packageSlices(pkgS)
+	if err != nil {
+		return err
+	}
+	var errs multierror.MultiError
+
+	if len(aurS) != 0 {
+		noDB := make([]string, 0, len(aurS))
+		for _, pkg := range aurS {
+			_, name := splitDBFromName(pkg)
+			noDB = append(noDB, name)
+		}
+		local_pkgbuilds, err = aurPkgbuilds(noDB)
+		pkgbuilds = append(pkgbuilds, local_pkgbuilds...)
+		errs.Add(err)
+	}
+
+	if len(repoS) != 0 {
+		local_pkgbuilds, err = repoPkgbuilds(repoS)
+		pkgbuilds = append(pkgbuilds, local_pkgbuilds...)
+		errs.Add(err)
+	}
+
+	if err = errs.Return(); err != nil {
+		missing = true
+		fmt.Fprintln(os.Stderr, err)
+	}
+
+	if len(aurS) != len(pkgbuilds) {
+		missing = true
+	}
+
+	if len(pkgbuilds) != 0 {
+		for _, pkgbuild := range pkgbuilds {
+			fmt.Print(pkgbuild)
+		}
+	}
+
+	if missing {
+		err = fmt.Errorf("")
+	}
+
+	return err
+}
diff --git a/query.go b/query.go
index 1b0ab4b4..be3fff9c 100644
--- a/query.go
+++ b/query.go
@@ -2,6 +2,9 @@ package main
 
 import (
 	"fmt"
+	"io/ioutil"
+	"net/http"
+	"net/url"
 	"os"
 	"sort"
 	"strings"
@@ -574,3 +577,144 @@ func aurInfoPrint(names []string) ([]*rpc.Pkg, error) {
 
 	return info, nil
 }
+
+var AURPKGBUILDURL = "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?"
+
+func aurPkgbuilds(names []string) ([]string, error) {
+	pkgbuilds := make([]string, 0, len(names))
+	var mux sync.Mutex
+	var wg sync.WaitGroup
+	var errs multierror.MultiError
+
+	makeRequest := func(name string) {
+		defer wg.Done()
+
+		values := url.Values{}
+		values.Set("h", name)
+
+		resp, err := http.Get(AURPKGBUILDURL + values.Encode())
+		if err != nil {
+			errs.Add(err)
+			return
+		}
+		defer resp.Body.Close()
+
+		body, readErr := ioutil.ReadAll(resp.Body)
+		pkgbuild := string(body)
+
+		if readErr != nil {
+			errs.Add(readErr)
+			return
+		}
+
+		if strings.Contains(pkgbuild,
+		"<div class='content'><div class='error'>Invalid branch: " + name + "</div>") {
+			errs.Add(fmt.Errorf("package %s was not found.", name))
+			return;
+		}
+
+		mux.Lock()
+		pkgbuilds = append(pkgbuilds, pkgbuild)
+		mux.Unlock()
+	}
+
+	for _, name := range names {
+		wg.Add(1)
+		go makeRequest(name)
+	}
+
+	wg.Wait()
+
+	if err := errs.Return(); err != nil {
+		return pkgbuilds, err
+	}
+
+	return pkgbuilds, nil
+}
+
+type errorString struct {
+	s string
+}
+
+func repoPkgbuilds(names []string) ([]string, error) {
+	pkgbuilds := make([]string, 0, len(names))
+	var mux sync.Mutex
+	var wg sync.WaitGroup
+	var errs multierror.MultiError
+
+	makeRequest := func(full string) {
+		defer wg.Done()
+
+		dbList, dbErr := alpmHandle.SyncDBs()
+		if dbErr != nil {
+			errs.Add(dbErr)
+			return
+		}
+
+		db, name := splitDBFromName(full)
+
+		if len(db) == 0 {
+			var pkg *alpm.Package
+			for _, alpmDB := range dbList.Slice() {
+				mux.Lock()
+				if pkg = alpmDB.Pkg(name); pkg != nil {
+					db = alpmDB.Name()
+					name = pkg.Base()
+					if name == "" {
+						name = pkg.Name()
+					}
+				}
+				mux.Unlock()
+			}
+		}
+
+		values := url.Values{}
+		values.Set("h", "packages/" +name)
+
+		var url string
+
+		// TODO: Check existence with ls-remote
+		// https://git.archlinux.org/svntogit/packages.git
+		switch db {
+		case "core", "extra", "testing":
+			url = "https://git.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?"
+		case "community", "multilib", "community-testing", "multilib-testing":
+			url = "https://git.archlinux.org/svntogit/community.git/plain/trunk/PKGBUILD?"
+		default:
+			errs.Add(fmt.Errorf("unable to get PKGBUILD from repo \"%s\"", db))
+			return
+		}
+
+		resp, err := http.Get(url + values.Encode())
+		if err != nil {
+			errs.Add(err)
+			return
+		}
+		defer resp.Body.Close()
+
+		body, readErr := ioutil.ReadAll(resp.Body)
+		pkgbuild := string(body)
+
+		if readErr != nil {
+			errs.Add(readErr)
+			return
+		}
+
+		mux.Lock()
+		pkgbuilds = append(pkgbuilds, pkgbuild)
+		mux.Unlock()
+	}
+
+	for _, full := range names {
+		wg.Add(1)
+		go makeRequest(full)
+	}
+
+	wg.Wait()
+
+	if err := errs.Return(); err != nil {
+		return pkgbuilds, err
+	}
+
+	return pkgbuilds, nil
+}

From 2389fe7bc0be5472895c3fd6ecb723572b0a0ac5 Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Sat, 9 May 2020 19:56:22 +0200
Subject: [PATCH 2/9] fix linting errors

---
 print.go | 10 +++++-----
 query.go | 14 +++++---------
 2 files changed, 10 insertions(+), 14 deletions(-)

diff --git a/print.go b/print.go
index 20518f6c..4c18dd22 100644
--- a/print.go
+++ b/print.go
@@ -676,7 +676,7 @@ func providerMenu(dep string, providers providers) *rpc.Pkg {
 
 func printPkgbuilds(pkgS []string) error {
 	var pkgbuilds []string
-	var local_pkgbuilds []string
+	var localPkgbuilds []string
 	missing := false
 	pkgS = removeInvalidTargets(pkgS)
 	aurS, repoS, err := packageSlices(pkgS)
@@ -691,14 +691,14 @@ func printPkgbuilds(pkgS []string) error {
 			_, name := splitDBFromName(pkg)
 			noDB = append(noDB, name)
 		}
-		local_pkgbuilds, err = aurPkgbuilds(noDB)
-		pkgbuilds = append(pkgbuilds, local_pkgbuilds...)
+		localPkgbuilds, err = aurPkgbuilds(noDB)
+		pkgbuilds = append(pkgbuilds, localPkgbuilds...)
 		errs.Add(err)
 	}
 
 	if len(repoS) != 0 {
-		local_pkgbuilds, err = repoPkgbuilds(repoS)
-		pkgbuilds = append(pkgbuilds, local_pkgbuilds...)
+		localPkgbuilds, err = repoPkgbuilds(repoS)
+		pkgbuilds = append(pkgbuilds, localPkgbuilds...)
 		errs.Add(err)
 	}
 
diff --git a/query.go b/query.go
index be3fff9c..3cb0ac3e 100644
--- a/query.go
+++ b/query.go
@@ -578,8 +578,6 @@ func aurInfoPrint(names []string) ([]*rpc.Pkg, error) {
 	return info, nil
 }
 
-var AURPKGBUILDURL = "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?"
-
 func aurPkgbuilds(names []string) ([]string, error) {
 	pkgbuilds := make([]string, 0, len(names))
 	var mux sync.Mutex
@@ -592,7 +590,9 @@ func aurPkgbuilds(names []string) ([]string, error) {
 		values := url.Values{}
 		values.Set("h", name)
 
-		resp, err := http.Get(AURPKGBUILDURL + values.Encode())
+		url := "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?"
+
+		resp, err := http.Get(url + values.Encode())
 		if err != nil {
 			errs.Add(err)
 			return
@@ -609,7 +609,7 @@ func aurPkgbuilds(names []string) ([]string, error) {
 
 		if strings.Contains(pkgbuild,
 		"<div class='content'><div class='error'>Invalid branch: " + name + "</div>") {
-			errs.Add(fmt.Errorf("package %s was not found.", name))
+			errs.Add(fmt.Errorf("package \"%s\" was not found", name))
 			return;
 		}
 
@@ -632,10 +632,6 @@ func aurPkgbuilds(names []string) ([]string, error) {
 	return pkgbuilds, nil
 }
 
-type errorString struct {
-	s string
-}
-
 func repoPkgbuilds(names []string) ([]string, error) {
 	pkgbuilds := make([]string, 0, len(names))
 	var mux sync.Mutex
@@ -653,7 +649,7 @@ func repoPkgbuilds(names []string) ([]string, error) {
 
 		db, name := splitDBFromName(full)
 
-		if len(db) == 0 {
+		if db == "" {
 			var pkg *alpm.Package
 			for _, alpmDB := range dbList.Slice() {
 				mux.Lock()

From 14d0cf23070381b4ec0af3f43a9bfe48cf275a30 Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Sat, 9 May 2020 20:01:10 +0200
Subject: [PATCH 3/9] format with make fmt

---
 query.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/query.go b/query.go
index 3cb0ac3e..f19e0abf 100644
--- a/query.go
+++ b/query.go
@@ -608,9 +608,9 @@ func aurPkgbuilds(names []string) ([]string, error) {
 		}
 
 		if strings.Contains(pkgbuild,
-		"<div class='content'><div class='error'>Invalid branch: " + name + "</div>") {
+			"<div class='content'><div class='error'>Invalid branch: "+name+"</div>") {
 			errs.Add(fmt.Errorf("package \"%s\" was not found", name))
-			return;
+			return
 		}
 
 		mux.Lock()
@@ -665,7 +665,7 @@ func repoPkgbuilds(names []string) ([]string, error) {
 		}
 
 		values := url.Values{}
-		values.Set("h", "packages/" +name)
+		values.Set("h", "packages/"+name)
 
 		var url string
 

From 15ef0b959b5f2445460dfee50c427cb2a7823b9e Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Sat, 9 May 2020 20:39:09 +0200
Subject: [PATCH 4/9] fix completions

---
 completions/bash | 3 +++
 completions/zsh  | 7 ++++++-
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/completions/bash b/completions/bash
index 7cdda186..5b2c01ab 100644
--- a/completions/bash
+++ b/completions/bash
@@ -119,6 +119,9 @@ _yay() {
       G)
         _yay_pkg
         ;;
+      P)
+        _arch_incomp 'p pkgbuild' && _yay_pkg
+        ;;
       esac
   fi
   true
diff --git a/completions/zsh b/completions/zsh
index c2016835..bf4f67d6 100644
--- a/completions/zsh
+++ b/completions/zsh
@@ -171,7 +171,7 @@ _pacman_opts_print_modifiers=(
 		{-s,--stats}'[Display system package statistics]'
 		{-u,--upgrades}'[Print update list]'
 		{-w,--news}'[Print arch news]'
-		{-p,--pkgbuild}'[Print arch news]'
+		{-p,--pkgbuild}'[Print arch news]:package:_pacman_completions_all_packages'
 )
 # options for passing to _arguments: options for --remove command
 _pacman_opts_remove=(
@@ -508,6 +508,11 @@ _pacman_zsh_comp() {
 		Q*)
 			_pacman_action_query
 			;;
+		P*p*)
+			 _arguments -s : \
+				"$_pacman_opts_print_modifiers[@]" \
+				"*:package:_pacman_all_packages"
+			;;
 		P*)
 			 _arguments -s : \
 				"$_pacman_opts_print_modifiers[@]"

From 4709a43b179925d3c00153e32060221837d2da2d Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Wed, 27 May 2020 20:02:29 +0200
Subject: [PATCH 5/9] resolve most of the requested changes

---
 completions/zsh |  2 +-
 query.go        | 52 +++++++++++++++++++++----------------------------
 2 files changed, 23 insertions(+), 31 deletions(-)

diff --git a/completions/zsh b/completions/zsh
index bf4f67d6..0093d364 100644
--- a/completions/zsh
+++ b/completions/zsh
@@ -171,7 +171,7 @@ _pacman_opts_print_modifiers=(
 		{-s,--stats}'[Display system package statistics]'
 		{-u,--upgrades}'[Print update list]'
 		{-w,--news}'[Print arch news]'
-		{-p,--pkgbuild}'[Print arch news]:package:_pacman_completions_all_packages'
+		{-p,--pkgbuild}'[Print PKGBUILDs]:package:_pacman_completions_all_packages'
 )
 # options for passing to _arguments: options for --remove command
 _pacman_opts_remove=(
diff --git a/query.go b/query.go
index f19e0abf..328dbb89 100644
--- a/query.go
+++ b/query.go
@@ -638,31 +638,13 @@ func repoPkgbuilds(names []string) ([]string, error) {
 	var wg sync.WaitGroup
 	var errs multierror.MultiError
 
-	makeRequest := func(full string) {
-		defer wg.Done()
-
-		dbList, dbErr := alpmHandle.SyncDBs()
-		if dbErr != nil {
-			errs.Add(dbErr)
-			return
-		}
-
-		db, name := splitDBFromName(full)
+	dbList, dbErr := alpmHandle.SyncDBs()
+	if dbErr != nil {
+		return nil, dbErr
+	}
 
-		if db == "" {
-			var pkg *alpm.Package
-			for _, alpmDB := range dbList.Slice() {
-				mux.Lock()
-				if pkg = alpmDB.Pkg(name); pkg != nil {
-					db = alpmDB.Name()
-					name = pkg.Base()
-					if name == "" {
-						name = pkg.Name()
-					}
-				}
-				mux.Unlock()
-			}
-		}
+	makeRequest := func(db string, name string) {
+		defer wg.Done()
 
 		values := url.Values{}
 		values.Set("h", "packages/"+name)
@@ -703,14 +685,24 @@ func repoPkgbuilds(names []string) ([]string, error) {
 
 	for _, full := range names {
 		wg.Add(1)
-		go makeRequest(full)
+		db, name := splitDBFromName(full)
+
+		if db == "" {
+			var pkg *alpm.Package
+			for _, alpmDB := range dbList.Slice() {
+				if pkg = alpmDB.Pkg(name); pkg != nil {
+					db = alpmDB.Name()
+					name = pkg.Base()
+					if name == "" {
+						name = pkg.Name()
+					}
+				}
+			}
+		}
+		go makeRequest(db, name)
 	}
 
 	wg.Wait()
 
-	if err := errs.Return(); err != nil {
-		return pkgbuilds, err
-	}
-
-	return pkgbuilds, nil
+	return pkgbuilds, errs.Return()
 }

From 70cdfca72aabd18f2d0d06a5582e2a3fa6ad9940 Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Fri, 29 May 2020 23:27:06 +0200
Subject: [PATCH 6/9] move loop over dbSlice back into makeRequest

---
 query.go | 34 ++++++++++++++++++----------------
 1 file changed, 18 insertions(+), 16 deletions(-)

diff --git a/query.go b/query.go
index 328dbb89..9d8755f1 100644
--- a/query.go
+++ b/query.go
@@ -642,10 +642,26 @@ func repoPkgbuilds(names []string) ([]string, error) {
 	if dbErr != nil {
 		return nil, dbErr
 	}
+	dbSlice := dbList.Slice()
 
-	makeRequest := func(db string, name string) {
+	makeRequest := func(full string) {
 		defer wg.Done()
 
+		db, name := splitDBFromName(full)
+
+		if db == "" {
+			var pkg *alpm.Package
+			for _, alpmDB := range dbSlice {
+				if pkg = alpmDB.Pkg(name); pkg != nil {
+					db = alpmDB.Name()
+					name = pkg.Base()
+					if name == "" {
+						name = pkg.Name()
+					}
+				}
+			}
+		}
+
 		values := url.Values{}
 		values.Set("h", "packages/"+name)
 
@@ -685,21 +701,7 @@ func repoPkgbuilds(names []string) ([]string, error) {
 
 	for _, full := range names {
 		wg.Add(1)
-		db, name := splitDBFromName(full)
-
-		if db == "" {
-			var pkg *alpm.Package
-			for _, alpmDB := range dbList.Slice() {
-				if pkg = alpmDB.Pkg(name); pkg != nil {
-					db = alpmDB.Name()
-					name = pkg.Base()
-					if name == "" {
-						name = pkg.Name()
-					}
-				}
-			}
-		}
-		go makeRequest(db, name)
+		go makeRequest(full)
 	}
 
 	wg.Wait()

From 55d990ab6a889effdc4a3e5239b64392cb8e671c Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Fri, 29 May 2020 23:40:29 +0200
Subject: [PATCH 7/9] query aur in chunks of 20

---
 query.go | 53 ++++++++++++++++++++++++++++-------------------------
 1 file changed, 28 insertions(+), 25 deletions(-)

diff --git a/query.go b/query.go
index 9d8755f1..34ea8d02 100644
--- a/query.go
+++ b/query.go
@@ -584,43 +584,46 @@ func aurPkgbuilds(names []string) ([]string, error) {
 	var wg sync.WaitGroup
 	var errs multierror.MultiError
 
-	makeRequest := func(name string) {
+	makeRequest := func(n, max int) {
 		defer wg.Done()
 
-		values := url.Values{}
-		values.Set("h", name)
+		for _, name := range names[n:max] {
+			values := url.Values{}
+			values.Set("h", name)
 
-		url := "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?"
+			url := "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?"
 
-		resp, err := http.Get(url + values.Encode())
-		if err != nil {
-			errs.Add(err)
-			return
-		}
-		defer resp.Body.Close()
+			resp, err := http.Get(url + values.Encode())
+			if err != nil {
+				errs.Add(err)
+				return
+			}
+			defer resp.Body.Close()
 
-		body, readErr := ioutil.ReadAll(resp.Body)
-		pkgbuild := string(body)
+			body, readErr := ioutil.ReadAll(resp.Body)
+			pkgbuild := string(body)
 
-		if readErr != nil {
-			errs.Add(readErr)
-			return
-		}
+			if readErr != nil {
+				errs.Add(readErr)
+				return
+			}
 
-		if strings.Contains(pkgbuild,
+			if strings.Contains(pkgbuild,
 			"<div class='content'><div class='error'>Invalid branch: "+name+"</div>") {
-			errs.Add(fmt.Errorf("package \"%s\" was not found", name))
-			return
-		}
+				errs.Add(fmt.Errorf("package \"%s\" was not found", name))
+				return
+			}
 
-		mux.Lock()
-		pkgbuilds = append(pkgbuilds, pkgbuild)
-		mux.Unlock()
+			mux.Lock()
+			pkgbuilds = append(pkgbuilds, pkgbuild)
+			mux.Unlock()
+		}
 	}
 
-	for _, name := range names {
+	for n := 0; n < len(names); n += 20 {
+		max := intrange.Min(len(names), n+20)
 		wg.Add(1)
-		go makeRequest(name)
+		go makeRequest(n, max)
 	}
 
 	wg.Wait()

From 721048ee59c79d20c66653173014108d90da696a Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Fri, 29 May 2020 23:45:08 +0200
Subject: [PATCH 8/9] check for status codes

---
 query.go | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/query.go b/query.go
index 34ea8d02..b59d7714 100644
--- a/query.go
+++ b/query.go
@@ -598,6 +598,10 @@ func aurPkgbuilds(names []string) ([]string, error) {
 				errs.Add(err)
 				return
 			}
+			if resp.StatusCode != 200 {
+				errs.Add(fmt.Errorf("error code %d for package %s", resp.StatusCode, name))
+				return
+			}
 			defer resp.Body.Close()
 
 			body, readErr := ioutil.ReadAll(resp.Body)
@@ -608,12 +612,6 @@ func aurPkgbuilds(names []string) ([]string, error) {
 				return
 			}
 
-			if strings.Contains(pkgbuild,
-			"<div class='content'><div class='error'>Invalid branch: "+name+"</div>") {
-				errs.Add(fmt.Errorf("package \"%s\" was not found", name))
-				return
-			}
-
 			mux.Lock()
 			pkgbuilds = append(pkgbuilds, pkgbuild)
 			mux.Unlock()
@@ -687,6 +685,10 @@ func repoPkgbuilds(names []string) ([]string, error) {
 			errs.Add(err)
 			return
 		}
+		if resp.StatusCode != 200 {
+			errs.Add(fmt.Errorf("error code %d for package %s", resp.StatusCode, name))
+			return
+		}
 		defer resp.Body.Close()
 
 		body, readErr := ioutil.ReadAll(resp.Body)

From e25f2bca9e7269ebef1b4e224e3018a89eafbe02 Mon Sep 17 00:00:00 2001
From: nycex <nycex@cccp.org>
Date: Fri, 29 May 2020 23:46:11 +0200
Subject: [PATCH 9/9] continue instead of return in for loop

---
 query.go | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/query.go b/query.go
index b59d7714..79de2fcc 100644
--- a/query.go
+++ b/query.go
@@ -596,11 +596,11 @@ func aurPkgbuilds(names []string) ([]string, error) {
 			resp, err := http.Get(url + values.Encode())
 			if err != nil {
 				errs.Add(err)
-				return
+				continue
 			}
 			if resp.StatusCode != 200 {
 				errs.Add(fmt.Errorf("error code %d for package %s", resp.StatusCode, name))
-				return
+				continue
 			}
 			defer resp.Body.Close()
 
@@ -609,7 +609,7 @@ func aurPkgbuilds(names []string) ([]string, error) {
 
 			if readErr != nil {
 				errs.Add(readErr)
-				return
+				continue
 			}
 
 			mux.Lock()
